// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PickingListsSystem.DataAccess;

#nullable disable

namespace PickingListsSystem.DataAccess.Migrations
{
    [DbContext(typeof(PlsDbContext))]
    [Migration("20240405153018_migrationname")]
    partial class migrationname
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterialWork", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "WorkId");

                    b.HasIndex("WorkId");

                    b.ToTable("MaterialWork");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerContactPercon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialGost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialMark")
                        .HasColumnType("int");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialRB")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialRH")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialRL")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialType")
                        .HasColumnType("int");

                    b.Property<string>("MaterialUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaterialV")
                        .HasColumnType("float");

                    b.Property<int?>("MaterialWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolePriority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Statement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statement");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("WorkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkTypeId")
                        .HasColumnType("int");

                    b.Property<string>("WorkUnitMeasurement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("Work");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.WorkGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("WorkGroupDirectorId")
                        .HasColumnType("int");

                    b.Property<string>("WorkGroupStructure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WorkGroupDirectorId");

                    b.ToTable("WorkGroup");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TypeOfWork")
                        .HasColumnType("int");

                    b.Property<string>("WorkTypeTranscript")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkType");
                });

            modelBuilder.Entity("ProjectStatement", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("ProjectStatement");
                });

            modelBuilder.Entity("ProjectWorkGroup", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("WorkGroupId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "WorkGroupId");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("ProjectWorkGroup");
                });

            modelBuilder.Entity("MaterialWork", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickingListsSystem.Entities.Work", null)
                        .WithMany()
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Project", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.Customer", "Customer")
                        .WithMany("Project")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickingListsSystem.Entities.WorkType", "WorkType")
                        .WithMany("Project")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.User", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickingListsSystem.Entities.WorkGroup", null)
                        .WithMany("Users")
                        .HasForeignKey("WorkGroupId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Work", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.WorkType", "WorkType")
                        .WithMany("Works")
                        .HasForeignKey("WorkTypeId");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.WorkGroup", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.User", "WorkGroupDirector")
                        .WithMany()
                        .HasForeignKey("WorkGroupDirectorId");

                    b.Navigation("WorkGroupDirector");
                });

            modelBuilder.Entity("ProjectStatement", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickingListsSystem.Entities.Statement", null)
                        .WithMany()
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectWorkGroup", b =>
                {
                    b.HasOne("PickingListsSystem.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickingListsSystem.Entities.WorkGroup", null)
                        .WithMany()
                        .HasForeignKey("WorkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Customer", b =>
                {
                    b.Navigation("Project");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.WorkGroup", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PickingListsSystem.Entities.WorkType", b =>
                {
                    b.Navigation("Project");

                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
